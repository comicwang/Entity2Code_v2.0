using $IApplication$;
using $Data2Object$;
using iTelluro.Explorer.Application.CodeFirst.Seedwork;
using iTelluro.Explorer.Domain.CodeFirst.Seedwork;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using $DomainContext$;
using $DomainEntity$;
using iTelluro.Explorer.Infrastruct.CodeFirst.Seedwork;

namespace $Application$
{
    /// <summary>
    /// $Data2Obj$基础方法的提供
    /// </summary>
    public class $Data2Obj$App : I$Data2Obj$App
    {
        private I$Data2Obj$Repository _repository;
	
        public $Data2Obj$App(I$Data2Obj$Repository repository)
        {
            _repository = repository;
        }
        /// <summary>
        /// 新增一条$Data2Obj$记录
        /// </summary>
        /// <param name="dto">$Data2Obj$实体</param>
        /// <returns>是否新增成功</returns>
        public bool Add($Data2Obj$DTO dto)
        {
            try
            {
                var entity = dto.ProjectedAs<$Entity$>();
                if (_repository.Insert(entity) > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        /// <summary>
        /// 根据主键删除一条$Data2Obj$记录
        /// </summary>
        /// <param name="guid">$Data2Obj$主键值</param>
        /// <returns>是否删除成功</returns>
        public bool Remove(string guid)
        {
            try
            {
                if (_repository.Delete(guid) > 0)
                    return true;
                else
                    return false;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        /// <summary>
        /// 更新一条$Data2Obj$记录
        /// </summary>
        /// <param name="dto">$Data2Obj$实体</param>
        /// <returns>是否更新成功</returns>
        public bool Update($Data2Obj$DTO dto)
        {
            try
            {
                if (_repository.Update(dto.ProjectedAs<$Entity$>()) > 0)
                    return true;
                else
                    return false;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        /// <summary>
        /// 根据$Data2Obj$主键获取一条记录
        /// </summary>
        /// <param name="guid">$Data2Obj$主键值</param>
        /// <returns>根据主键查询到的$Data2Obj$记录</returns>
        public $Data2Obj$DTO Get(string guid)
        {
            try
            {
                var entity = _repository.GetByKey(guid);
                return entity.ProjectedAs<$Data2Obj$DTO>();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        /// <summary>
        /// 查询所有$Data2Obj$记录
        /// </summary>
        /// <returns>$Data2Obj$所有记录集合</returns>
        public List<$Data2Obj$DTO> GetAll()
        {
            try
            {
                return _repository.EntityNoTracking.ProjectedAsCollection<$Data2Obj$DTO>();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
    }
}